// Copyright (c) Venzio 2013 All Rights Reserved

define([
    'client/Mesh'
  ],
  function(Mesh) {
    return Mesh.extend({
      constructor: function() {
        this.base();

        this.normalMatrix = mat4.create();
        mat4.identity(this.normalMatrix);
      },

      initialize: function() {
        Mesh.prototype.initialize.bind(this)();

        this.setUniform('NormalMatrix', this.normalMatrix);
        this.setUniform('BoneMatrices', this.getBoneMatrices());
      },

      getBoneMatrices: function() {
        return new Float32Array(<%- bone_matrices %>);
      },

      getAttribData: function(attrib) {
        if (attrib == 'Position') {
          return new Float32Array(<%- vertices %>);
        } else if (attrib == 'Normal') {
          return new Float32Array(<%- normals %>);
        } else if (attrib == 'TextureCoord') {
          return new Float32Array(<%- texcoords %>);
        } else if (attrib == 'BoneIndex1') {
          return new Float32Array(<%- bone_indices[0] %>);
        } else if (attrib == 'BoneIndex2') {
          return new Float32Array(<%- bone_indices[1] %>);
        } else if (attrib == 'BoneIndex3') {
          return new Float32Array(<%- bone_indices[2] %>);
        } else if (attrib == 'BoneIndex4') {
          return new Float32Array(<%- bone_indices[3] %>);
        } else if (attrib == 'BoneIndex5') {
          return new Float32Array(<%- bone_indices[4] %>);
        } else if (attrib == 'BoneWeight1') {
          return new Float32Array(<%- bone_weights[0] %>);
        } else if (attrib == 'BoneWeight2') {
          return new Float32Array(<%- bone_weights[1] %>);
        } else if (attrib == 'BoneWeight3') {
          return new Float32Array(<%- bone_weights[2] %>);
        } else if (attrib == 'BoneWeight4') {
          return new Float32Array(<%- bone_weights[3] %>);
        } else if (attrib == 'BoneWeight5') {
          return new Float32Array(<%- bone_weights[4] %>);
        }
      },

      getNumItems: function() {
        return <%= count %>;
      },

      getPosition: function() {
        return {x: 0.0, y: 2.0, z: -4.0};
      },

      getRotation: function() {
        return {pitch: 0.0, yaw: 0.0};
      },

      getShaderName: function() {
        return 'man';
      }
    });
  }
);
